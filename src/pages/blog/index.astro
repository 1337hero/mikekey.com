---
import { Image } from "astro:assets";
import { getCollection, render, type CollectionEntry } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import Layout from "../../layouts/Layout.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";

const posts = await getCollection("blog");
const notes = await getCollection("notes");

const noteEntries = await Promise.all(
  notes.map(async (note) => {
    const { Content } = await render(note as CollectionEntry<'notes'>);
    return { ...note, Content };
  })
);

const noteAnchor = (id: string) => `note-${id.replace(/\//g, '-')}/`;

type TimelineItem =
  | { type: 'post'; date: Date; item: CollectionEntry<'blog'> }
  | {
      type: 'note';
      date: Date;
      item: (typeof noteEntries)[number];
    };

const timeline: TimelineItem[] = [
  ...posts.map((p) => ({ type: 'post' as const, date: p.data.updatedDate ?? p.data.date, item: p })),
  ...noteEntries.map((n) => ({ type: 'note' as const, date: n.data.updatedDate ?? n.data.date, item: n })),
].sort((a, b) => b.date.valueOf() - a.date.valueOf());
---
<Layout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <section class="py-20">
    <div class="container-content">
      <div class="flex items-center justify-between mb-12">
        <div>
          <h2 class="font-display font-bold text-step-4 mb-2">
            All Posts
          </h2>
          <p>Every post in the archive</p>
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-8">
        {
          timeline.map((entry, index) => (
            entry.type === 'post' ? (
              <article
                class="group bg-white dark:bg-gray-600 overflow-hidden"
                style={`animation-delay: ${index * 100}ms`}
              >
                <a href={`/blog/${entry.item.id}/`} class="block">
                  {entry.item.data.heroImage && (
                    <Image
                      width={720}
                      height={360}
                      src={entry.item.data.heroImage}
                      alt={entry.item.data.title}
                    />
                  )}

                  <div class="p-4">
                    <time class="block text-xs mb-1">
                      <FormattedDate date={entry.item.data.date} />
                    </time>
                    <h3 class="font-display font-bold text-step-2 transition-colors">
                      {entry.item.data.title}
                    </h3>
                  </div>
                </a>
              </article>
            ) : (
              <article id={noteAnchor(entry.item.id)} class="bg-gray-100 dark:bg-gray-700 rounded-md p-4 border border-gray-200 dark:border-gray-600">
                <div class="flex items-center justify-between mb-2">
                  <span class="inline-block text-xs font-bold tracking-wide bg-bright-sun text-gray-900 rounded px-2 py-1">Quick note</span>
                  <time class="text-xs"><FormattedDate date={entry.item.data.date} /></time>
                </div>
                <div class="prose dark:prose-invert max-w-none">
                  <entry.item.Content />
                </div>
              </article>
            )
          ))
        }
      </div>
    </div>
  </section>
</Layout>
